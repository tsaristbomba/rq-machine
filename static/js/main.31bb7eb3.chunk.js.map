{"version":3,"sources":["Context.js","Quote.js","index.js","App.js"],"names":["randomColor","require","Context","React","createContext","Quote","useContext","randomQuote","author","changeQuote","id","className","href","icon","faTwitterSquare","onClick","ReactDOM","render","children","useState","quotes","setQuotes","idx","setIdx","setRandom","setAuthor","useEffect","fetch","then","res","json","data","Provider","value","index","Math","floor","random","length","quote","auth","rColor","document","getElementById","style","backgroundColor","color","transition"],"mappings":"sLAEIA,EAAcC,EAAQ,IAEpBC,EAAUC,IAAMC,gB,kBCEP,SAASC,IAAS,IAAD,EACeC,qBAAWJ,GAA/CK,EADqB,EACrBA,YAAaC,EADQ,EACRA,OAAQC,EADA,EACAA,YAE5B,OACQ,8BACI,yBAAKC,GAAG,aACJ,uBAAGA,GAAG,QAAQH,GACd,uBAAGG,GAAG,UAAU,KAAOF,GACvB,yBAAKG,UAAU,gBACX,uBACAD,GAAG,cACHE,KAAK,4BACJ,kBAAC,IAAD,CAAiBF,GAAG,OAAOG,KAAMC,OAClC,4BACAC,QAASN,EACTC,GAAG,aAFH,gB,MCZxBM,IAASC,OACT,mBFDA,YAAsC,IAAZC,EAAW,EAAXA,SAAW,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,OAEXF,mBAAS,GAFE,mBAE1BG,EAF0B,KAErBC,EAFqB,OAGAJ,mBAAS,sEAHT,mBAG1BZ,EAH0B,KAGbiB,EAHa,OAILL,mBAAS,iBAJJ,mBAI1BX,EAJ0B,KAIlBiB,EAJkB,KAkCjC,OANAC,qBAAU,WACNC,MAvBQ,0IAwBPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIV,EAAUU,EAAKX,aAC9B,IAGC,kBAAClB,EAAQ8B,SAAT,CAAkBC,MAAO,CAAC1B,cAAaC,SAAQC,YA3BnD,WACI,IAAMyB,EAAQC,KAAKC,MAAOD,KAAKE,SAAWjB,EAAOkB,OAAU,GAC3Df,EAAOW,GAEP,IAAMG,EAASjB,EAAOE,GAAKiB,MAC3Bf,EAAUa,GAEV,IAAMG,EAAOpB,EAAOE,GAAKd,OACzBiB,EAAUe,GAEV,IAAMC,EAASzC,IACf0C,SAASC,eAAe,QAAQC,MAAMC,gBAAkBJ,EACxDC,SAASC,eAAe,QAAQC,MAAME,MAAQL,EAC9CC,SAASC,eAAe,QAAQC,MAAMG,WAAa,gCACnDL,SAASC,eAAe,aAAaC,MAAMC,gBAAkBJ,EAC7DC,SAASC,eAAe,aAAaC,MAAMG,WAAa,sBACxDL,SAASC,eAAe,QAAQC,MAAME,MAAQL,EAC9CC,SAASC,eAAe,QAAQC,MAAMG,WAAa,cAW9C7B,KEnCb,KACI,mBCNW,WACX,OACI,kBAACb,EAAD,QDIJ,OAEEqC,SAASC,eAAe,U","file":"static/js/main.31bb7eb3.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\n\r\nvar randomColor = require('randomcolor')\r\n\r\nconst Context = React.createContext()\r\n\r\n\r\nfunction ContextProvider({children}) {\r\n    const [quotes, setQuotes] = useState([])\r\n    const [idx, setIdx] = useState(0)\r\n    const [randomQuote, setRandom] = useState(\"Whatever the mind of man can conceive and believe, it can achieve.\")\r\n    const [author, setAuthor] = useState(\"Napoleon Hill\")\r\n\r\n    const url = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n\r\n    function changeQuote() {\r\n        const index = Math.floor((Math.random() * quotes.length) + 0)\r\n        setIdx(index)\r\n    \r\n        const random = quotes[idx].quote\r\n        setRandom(random)\r\n        \r\n        const auth = quotes[idx].author\r\n        setAuthor(auth)\r\n\r\n        const rColor = randomColor()\r\n        document.getElementById(\"root\").style.backgroundColor = rColor\r\n        document.getElementById(\"root\").style.color = rColor\r\n        document.getElementById(\"root\").style.transition = \"background-color 1s, color 1s\"\r\n        document.getElementById(\"new-quote\").style.backgroundColor = rColor\r\n        document.getElementById(\"new-quote\").style.transition = \"background-color 1s\"\r\n        document.getElementById(\"icon\").style.color = rColor\r\n        document.getElementById(\"icon\").style.transition = \"color 1s\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => setQuotes(data.quotes))\r\n    }, [])\r\n\r\n    return (\r\n        <Context.Provider value={{randomQuote, author, changeQuote}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","import React, {useContext} from \"react\"\r\nimport {Context} from \"./Context\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nexport default function Quote() {\r\n    const {randomQuote, author, changeQuote} = useContext(Context)\r\n    \r\n    return (\r\n            <body>\r\n                <div id=\"quote-box\">\r\n                    <q id=\"text\">{randomQuote}</q>\r\n                    <p id=\"author\">{\"- \" + author}</p>\r\n                    <div className=\"btns-wrapper\">\r\n                        <a \r\n                        id=\"tweet-quote\" \r\n                        href=\"twitter.com/intent/tweet\"\r\n                        ><FontAwesomeIcon id=\"icon\" icon={faTwitterSquare}/></a>\r\n                        <button \r\n                        onClick={changeQuote} \r\n                        id=\"new-quote\">New Quote</button>\r\n                    </div>\r\n                </div>\r\n            </body>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport './styles.css'\r\n\r\nimport {ContextProvider} from \"./Context\"\r\n\r\nReactDOM.render(\r\n<ContextProvider>\r\n    <App />\r\n</ContextProvider>\r\n    , document.getElementById('root')\r\n)","import React from \"react\"\r\nimport Quote from \"./Quote\"\r\n\r\nexport default function App() {\r\n    return (\r\n        <Quote />\r\n    )\r\n}"],"sourceRoot":""}